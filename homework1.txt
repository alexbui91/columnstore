cout << "Loading time: " << ((float)t2-(float)t1) / CLOCKS_PER_SEC  << "s" << endl;
	cout << "Memory consumption after loading: " << getMemory() << "kb" << endl;

	t1 = clock();
	// perform search SID = 40
	vector<size_t> result;
	ColumnBase* col_b = columns.at(0);
	Column<unsigned int>* col = (Column<unsigned int>*) col_b;
	unsigned int input = 40U;
	col->getDictionary()->search(ColumnBase::equal, result, input);
	cout << "Dictionary size of sid: " << col->getDictionary()->size() << " with size: " << col->getDictionary()->getMemoryConsumption() << "b" << endl;
	cout << "Total row of sid = 40: " << result.size() << endl;
	t2 = clock();
	cout << "Running time of sid = 40: " << ((float)t2-(float)t1) / CLOCKS_PER_SEC  << "s"  << endl;
	vector<size_t> output = get_limit(result);
	print_result(output, col);
	cout << "Memory consumption after perform sid = 40: " << getMemory() << "kb" << endl;

//	// V > 5,000,000
	result.clear();
	t1 = clock();
	col_b = columns.at(2);
	col = (Column<unsigned int>*) col_b;
	input = 5000000U;
	col->getDictionary()->search(ColumnBase::gt, result, input);
	cout << "Dictionary size of v : " << col->getDictionary()->size() << " with size: " << col->getDictionary()->getMemoryConsumption() << "b" << endl;
	cout << "Total row of V > 5,000,000: " << result.size() << endl;
	t2 = clock();
	cout << "Running time of V > 5,000,000: " << ((float)t2-(float)t1) / CLOCKS_PER_SEC  << "s" << endl;
	output = get_limit(result);
	print_result(output, col);
	cout << "Memory consumption after perform V > 5,000,000: " << getMemory() << "kb" << endl;

	// 120e14 < TS < 121e14
	result.clear();
	t1 = clock();
	col_b = columns.at(1);
	Column<bigint>* ts = (Column<bigint>*) col_b;
	bigint input1 = 1000000000000000LL;
	bigint input2 = 12100000000000000LL;
	cout << "Dictionary size of ts in lossless : " << col->getDictionary()->size() << " with size: " << col->getDictionary()->getMemoryConsumption() << "b" << endl;
	cout << "Dictionary size of ts in lossy : " << ts_lossy->getDictionary()->size() << " with size: " << ts_lossy->getDictionary()->getMemoryConsumption() << "b" << endl;
	ts->getDictionary()->search(ColumnBase::range, result, input1, input2);
	cout << "Total row of 100e14 < TS < 121e14: " << result.size() << endl;
	t2 = clock();
	cout << "Running time of 100e14 < TS < 121e14: " << ((float)t2-(float)t1) / CLOCKS_PER_SEC  << "s" << endl;
	output = get_limit(result);
	print_result(output, ts);
	cout << "Memory consumption after perform 100e14 < TS < 100e14: " << getMemory() << "kb" << endl;

	// perform search in lossy
	result.clear();
	t1 = clock();
	long lin1 = to_lossy(to_string(input1));
	long lint2 = to_lossy(to_string(input2));
	ts_lossy->getDictionary()->search(ColumnBase::range, result, lin1, lint2);
	cout << "Total row of 100e14 < TS < 121e14 in lossy dict: " << result.size() << endl;
	t2 = clock();
	cout << "Running time of 100e14 < TS < 121e14 in lossy dict: " << ((float)t2-(float)t1) / CLOCKS_PER_SEC  << "s" << endl;
	output = get_limit(result);
	print_result(output, ts_lossy);
	cout << "Memory consumption after perform 100e14 < TS < 100e14 in lossy dict: " << getMemory() << "kb" << endl;